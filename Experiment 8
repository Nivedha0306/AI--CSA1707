def dfs(graph, start):
    visited = set()
    stack = [start]     
    traversal = []      
while stack:
        node = stack.pop() 
        if node not in visited:
            visited.add(node)
            traversal.append(node)
            for neighbor in reversed(graph[node]):
                if neighbor not in visited:
                    stack.append(neighbor)

    return traversal
if __name__ == "__main__":
    graph = {
        'A': ['B', 'C'],
        'B': ['A', 'D', 'E'],
        'C': ['A', 'F'],
        'D': ['B'],
        'E': ['B', 'F'],
        'F': ['C', 'E']
    }

    start_node = 'A'
    print("DFS Traversal starting from", start_node, ":", dfs(graph, start_node))
